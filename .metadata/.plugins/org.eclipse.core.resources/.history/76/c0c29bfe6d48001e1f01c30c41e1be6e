package com.shopping.myservlet;

import java.io.IOException;
import java.util.Map;

import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.taglibs.standard.tag.common.fmt.RequestEncodingSupport;

import com.shopping.controller.SuperController;
import com.shopping.utility.MyUtility;

@WebServlet(
		urlPatterns = { "/Shopping" }, 
		initParams = { 
				@WebInitParam(name = "txtSetting", value = "/WEB-INF/setting.txt"), 
				@WebInitParam(name = "todoList", value = "/WEB-INF/todolist.txt")
		})
public class FrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	// 초기화 파라미터 관련 변수
	private String txtSetting = null;
	private String todolist = null;
	
	// map for setting.txt file
	private Map<String, String> settingMap = null;

	// map for setting.txt file
	private Map<String, SuperController> todoListMap = null;
	
	protected void doProcess(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		
		// 컨트롤러 분기를 위한 핵심 파라미터
		String command = request.getParameter("command");
		if(command == null) {
			System.out.println("file upload event invoked");
			
		}
		System.out.println("command is [" + command + "]");
		SuperController controller = this.todoListMap.get(command);
		if (controller != null) {
			String method = request.getMethod();
			try {
				if (method.equalsIgnoreCase("get")) {
					System.out.println(this.getClass() + "get method called");
					controller.doGet(request, response);

				} else {
					System.out.println(this.getClass() + "post method called");
					controller.doGet(request, response);
				}
			} catch (Exception e) {
				e.printStackTrace();

			}
		} else {
			System.out.println("request commnad is not found");
		}
		
	}
	
    public FrontController() {}
	public void init(ServletConfig config) throws ServletException {
		this.txtSetting = config.getInitParameter("txtSetting"); // 파라미터 이름이라 괄호안에 쌍따옴표 붙이기. (" ") . 변수 x
		System.out.println("txtSetting is [" + this.txtSetting + "]");
		
		this.todolist = config.getInitParameter("todolist"); // 파라미터 이름이라 괄호안에 쌍따옴표 붙이기. (" ") . 변수 x
		System.out.println("todolist is [" + this.todolist + "]");
		
		ServletContext application = config.getServletContext();
	
		// txtSetting 파일 주소
		String txtSettingFile = application.getRealPath(txtSetting);
		System.out.println("txtSettingFile is [" + txtSettingFile + "]");
		// todoList 파일 주소
		String todoListFile = application.getRealPath(todolist);
		System.out.println("todoListFile is [" + todoListFile + "]");
		
		this.settingMap = MyUtility.getSettingMap(txtSettingFile);
		System.out.println("setting file element size = [" + settingMap.size() + "]");
		
		application.setAttribute("settingMap", this.settingMap); // setAttribute =  바인딩 작업
		
		this.todoListMap = MyUtility.getTodolistMap(todoListFile);
		System.out.println("todoList file element size = [" + todoListMap.size() + "]");	
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.getWriter().append("Served at: ").append(request.getContextPath());
		this.doProcess(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { 
		doGet(request, response);
		this.doProcess(request, response);
	}

}












